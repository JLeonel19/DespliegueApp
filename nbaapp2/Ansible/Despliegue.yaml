 pre_tasks:

    - name: crear maquina virtual.
      command: minikube start --vm-driver=virtualbox --no-vtx-check
      when: "not minikube_status.stdout or 'Running' not in minikube_status.stdout"
 
 tasks:

    - name: crear deploy para la db.
      k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: db
            namespace: jlandin
          spec:
            replicas: "1"
            selector:
              matchLabels:
                app: dbweb
            template:
              metadata:
                labels:
                  app: dbweb
              spec:
                containers:
                - name: dbwebcontenedor
                  image: csrleonel/db
                  imagePullPolicy: IfNotPresent
                  ports:
                  - containerPort: 3306

                  volumeMounts:
                  - name: db-volum
                  mountPath: var/lib/mysql

              volumes:  
              - name: db-volum  
  
                persistentVolumeClaim:  
                  claimName: volu-claim

    - name: crear deploy de la aplicacion.
      k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: aplicacion-d
            namespace: jlandin
          spec:
            replicas: "1"
            selector:
              matchLabels:
                app: apliweb
            template:
              metadata:
                labels:
                  app: apliweb
              spec:
                containers:
                - name: aplicacion-contenedor
                  image: csrleonel/aplicacion
                  imagePullPolicy: IfNotPresent
                  ports:
                  - containerPort: 80

    - name: crear servicio de la db.
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: localhost2
            namespace: jlandin
          spec:
            type: NodePort
            ports:
            - port: 3306
              targetPort: 3306
            selector:
              app: dbweb
  
    - name: crear servicio de la aplicacion.
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: aplicacion-s
            labels:
              app: apliweb
            namespace: jlandin
          spec:
            type: NodePort
            ports:
            - port: 80
              targetPort: 80
            selector:
              app: apliweb

    - name: creacion del namespace.
      apiVersion: v1
      ind: Namespace
      metadata:
        name: jlandin
        labels: 
          tipo: aplicacionweb

    - name: creacion del ingress.
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: ingress-apli
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /

    spec:
      rules:
      - host: app.jlandin.com
        http:
          paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: aplicacion-s
                port:
                  number: 80
    